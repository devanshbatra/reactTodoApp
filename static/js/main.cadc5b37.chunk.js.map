{"version":3,"sources":["components/todo.js","components/Todos.js","components/Inputfield.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","className","todoobj","completed","text","onClick","setTodo","todo","map","item","id","filter","el","Todos","filteredstate","Inputfield","onSubmit","e","preventDefault","inputdata","Math","random","console","log","setInputdata","value","type","onChange","target","setStatus","App","useState","status","setFilteredstate","useEffect","filterHandler","getlocaltodos","savetodos","localStorage","setItem","JSON","stringify","getItem","localtodos","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOA+BeA,EA7BF,SAACC,GAoBV,OACI,sBAAKC,UAAS,mBAAcD,EAAME,QAAQC,UAAY,YAAc,IAApE,UACI,mBAAGF,UAAU,eAAb,SAA6BD,EAAMI,OACnC,wBAAQH,UAAU,UAAUI,QAjBd,WAClBL,EAAMM,QACFN,EAAMO,KAAKC,KAAI,SAAAC,GACX,OAAGA,EAAKC,KAAKV,EAAME,QAAQQ,GACvB,2BACOD,GADP,IAEIN,WAAaM,EAAKN,YAGnBM,OAQX,SAAuD,mBAAGR,UAAU,mBACpE,wBAAQA,UAAU,UAAUI,QAtBhB,WAChBL,EAAMM,QAAQN,EAAMO,KAAKI,QAAO,SAACC,GAAD,OAAOA,EAAGF,KAAKV,EAAME,QAAQQ,QAqBzD,SAAoD,mBAAGT,UAAU,uBCZ9DY,EAXD,SAACb,GACX,OACI,qBAAKC,UAAU,YAAf,SACSD,EAAMc,cAAcN,KAAI,SAACN,GAAD,OACrB,cAAC,EAAD,CAAME,KAAMF,EAAQE,KAAuBE,QAASN,EAAMM,QAASJ,QAASA,EAASK,KAAMP,EAAMO,MAAlEL,EAAQQ,U,OC4B5CK,EAjCI,SAACf,GAkBhB,OACI,sBAAKC,UAAU,YAAf,UACI,uBAAMA,UAAU,aAAae,SAfrB,SAACC,GACbA,EAAEC,iBACFlB,EAAMM,QAAN,sBACON,EAAMO,MADb,CACmB,CAAEH,KAAMJ,EAAMmB,UAAWhB,WAAW,EAAOO,GAAoB,IAAhBU,KAAKC,aAEvEC,QAAQC,IAAIvB,EAAMO,MAClBP,EAAMwB,aAAa,KASf,UACI,uBAAOC,MAAOzB,EAAMmB,UAAWO,KAAK,OAAOzB,UAAU,YAAY0B,SAnBxD,SAACV,GAClBjB,EAAMwB,aAAaP,EAAEW,OAAOH,UAmBpB,yBAAQxB,UAAU,YAAlB,cAA+B,mBAAGA,UAAU,6BAEhD,yBAAQ0B,SAVI,SAACV,GACjBjB,EAAM6B,UAAUZ,EAAEW,OAAOH,QASYxB,UAAU,SAA3C,UACI,wBAAQwB,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,eAAd,kCC+BDK,EAvDH,WAAM,MAGkBC,mBAAS,IAH3B,mBAGTZ,EAHS,KAGEK,EAHF,OAIQO,mBAAS,IAJjB,mBAITxB,EAJS,KAIHD,EAJG,OAKYyB,mBAAS,OALrB,mBAKTC,EALS,KAKDH,EALC,OAM0BE,mBAAS,IANnC,mBAMTjB,EANS,KAMMmB,EANN,KAShBC,qBAAU,WACRC,MAEA,CAACH,EAAQzB,IAEX2B,qBAAU,WACRE,MACC,IACHF,qBAAU,WACRG,MACC,CAAC9B,IAGJ,IAAM4B,EAAgB,SAAClB,GACrB,OAAQe,GACN,IAAK,YAAaC,EAAiB1B,EAAKI,QAAO,SAAAC,GAAE,OAAIA,EAAGT,cACtD,MACF,IAAK,eAAgB8B,EAAiB1B,EAAKI,QAAO,SAAAC,GAAE,OAAKA,EAAGT,cAC1D,MACF,QAAS8B,EAAiB1B,GAE5Be,QAAQC,IAAIT,IAGRuB,EAAU,WACdC,aAAaC,QAAQ,QAASC,KAAKC,UAAUlC,KAGzC6B,EAAgB,WACpB,GAAmC,OAAhCE,aAAaI,QAAQ,SACtBJ,aAAaC,QAAQ,QAAU,QAC5B,CACH,IAAMI,EAAaH,KAAKI,MAAMN,aAAaI,QAAQ,UACnDpC,EAAQqC,KAIZ,OACE,sBAAK1C,UAAU,MAAf,UACE,oBAAIA,UAAU,UAAd,sBACA,cAAC,EAAD,CAAYuB,aAAcA,EAAcL,UAAWA,EAAWb,QAASA,EAASC,KAAMA,EAAMsB,UAAWA,EAAWG,OAAQA,IAC1H,cAAC,EAAD,CAAOzB,KAAMA,EAAMD,QAASA,EAASQ,cAAeA,QC3C3C+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cadc5b37.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Todo = (props) => {\r\n\r\n    const deleteHandler=()=>{\r\n        props.setTodo(props.todo.filter((el)=> el.id!==props.todoobj.id));\r\n    }\r\n\r\n    const completeHandler=()=>{\r\n        props.setTodo(\r\n            props.todo.map(item=>{\r\n                if(item.id===props.todoobj.id){\r\n                    return{\r\n                        ...item,\r\n                        completed : !item.completed\r\n                    }\r\n                }\r\n                return item;\r\n            })\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div className={`todo-div ${props.todoobj.completed ? \"completed\" : \"\"}`}>\r\n            <p className=\"todo-content\">{props.text}</p>\r\n            <button className=\"sel-btn\" onClick={completeHandler} ><i className=\"fas fa-check\"></i></button>\r\n            <button className=\"del-btn\" onClick={deleteHandler}><i className=\"fas fa-trash\" ></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './todo';\r\n\r\nconst Todos = (props) => {\r\n    return (\r\n        <div className=\"todo-list\">\r\n                {props.filteredstate.map((todoobj) => (\r\n                    <Todo text={todoobj.text} key={todoobj.id} setTodo={props.setTodo} todoobj={todoobj} todo={props.todo}/>\r\n                ))}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todos;","import React from 'react';\r\n\r\nconst Inputfield = (props) => {\r\n\r\n    const getInputdata = (e) => {\r\n        props.setInputdata(e.target.value);\r\n    }\r\n    const getTodo = (e) => {\r\n        e.preventDefault();\r\n        props.setTodo([\r\n            ...props.todo, { text: props.inputdata, completed: false, id: Math.random() * 1000 }\r\n        ]);\r\n        console.log(props.todo);\r\n        props.setInputdata(\"\");\r\n    }\r\n\r\n    const statusHandler=(e)=>{\r\n        props.setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-div\">\r\n            <form className=\"input-form\" onSubmit={getTodo}>\r\n                <input value={props.inputdata} type=\"text\" className='input-bar' onChange={getInputdata} />\r\n                <button className='input-btn'> <i className=\"fas fa-plus-square\" ></i></button>\r\n            </form>\r\n            <select onChange={statusHandler} className=\"filter\">\r\n                <option value=\"all\">All</option>\r\n                <option value=\"completed\">Completed</option>\r\n                <option value=\"notcompleted\">Not Completed</option>\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Inputfield;","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Todos from './components/Todos';\nimport Inputfield from './components/Inputfield';\n\nconst App = () => {\n\n  // States\n  const [inputdata, setInputdata] = useState(\"\");\n  const [todo, setTodo] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredstate, setFilteredstate] = useState([]);\n\n  // Effects\n  useEffect(() => {\n    filterHandler();\n  },\n    [status, todo]\n  );\n  useEffect(()=>{\n    getlocaltodos();\n  }, []);\n  useEffect(()=>{\n    savetodos();\n  }, [todo]);\n\n  // functions\n  const filterHandler = (e) => {\n    switch (status) {\n      case \"completed\": setFilteredstate(todo.filter(el => el.completed));\n        break;\n      case \"notcompleted\": setFilteredstate(todo.filter(el => !el.completed));\n        break;\n      default: setFilteredstate(todo);\n    }\n    console.log(filteredstate);\n  }\n\n  const savetodos=()=>{\n    localStorage.setItem(\"todos\", JSON.stringify(todo));\n  }\n\n  const getlocaltodos = () => {\n    if(localStorage.getItem('todos')===null){\n      localStorage.setItem(\"todos\", ([]));\n    }else{\n      const localtodos = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodo(localtodos);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <h1 className='heading'>ToDo App</h1>\n      <Inputfield setInputdata={setInputdata} inputdata={inputdata} setTodo={setTodo} todo={todo} setStatus={setStatus} status={status} />\n      <Todos todo={todo} setTodo={setTodo} filteredstate={filteredstate} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}